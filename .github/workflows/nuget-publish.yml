name: Publish to NuGet

on:
  # Chain after the UPM release workflow completes
  workflow_run:
    workflows: ["Publish UPM Packages"]
    types: [completed]
  # Allow manual runs for testing or ad-hoc publishing
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  publish:
    # Run for manual dispatch, or when UPM workflow succeeds
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Determine version
      id: version
      uses: actions/github-script@v7
      with:
        script: |
          const event = context.eventName;
          if (event === 'workflow_dispatch') {
            const v = core.getInput('version');
            if (!v) core.setFailed('version input is required');
            core.setOutput('tag', `dope-grid/v${v}`);
            core.setOutput('version', v);
            return;
          }
          // workflow_run path: find the latest dope-grid/* release
          const {owner, repo} = context.repo;
          const releases = await github.paginate(github.rest.repos.listReleases, {owner, repo, per_page: 100});
          const rel = releases.find(r => r.tag_name && r.tag_name.startsWith('dope-grid/'));
          if (!rel) core.setFailed('No dope-grid release found following UPM workflow run.');
          const tag = rel.tag_name;
          const version = tag.replace(/^dope-grid\//, '').replace(/^v/, '');
          core.setOutput('tag', tag);
          core.setOutput('version', version);

    - name: Update version in csproj
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.version.outputs.version }}<\/Version>/" dotnet/DopeGrid/DopeGrid.csproj

    - name: Restore dependencies
      run: dotnet restore dotnet/DopeGrid/DopeGrid.csproj

    - name: Build
      run: dotnet build dotnet/DopeGrid/DopeGrid.csproj --configuration Release --no-restore

    - name: Run tests
      run: dotnet test dotnet/DopeGrid.Tests/DopeGrid.Tests.csproj --configuration Release --no-build --verbosity normal

    - name: Pack
      run: dotnet pack dotnet/DopeGrid/DopeGrid.csproj --configuration Release --no-build --output ./nupkg

    - name: Publish to NuGet
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nuget-packages
        path: ./nupkg/*.nupkg
